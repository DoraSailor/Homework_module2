from array import array
import array
import numpy as np
import sys
## 1. Какие еще существуют коды типов?
# Type code |      C Type        |    Python Type   | Minimum size in bytes
#    'b'    |    signed char     |         int      |       1
#    'u'    |      wchar_t       | Unicode character|       1
#    'h'    |    signed short    |         int      |       2
#    'H'    |   unsigned short   |         int      |       2
#    'i'    |     signed int     |         int      |       2
#    'I'    |    unsigned int    |         int      |       2
#    'l'    |    signed long     |         int      |       4
#    'L'    |   unsigned long    |         int      |       4
#    'q'    | signed long long   |         int      |       8
#    'Q'    | unsigned long long |         int      |       8
#    'f'    |        float       |        float     |       4
#    'd'    |       double       |        float     |       8

# ## 2. Напишите код, подобный приведенному выше, но с другим типом
a1=array.array('f',[1.0,2.0,3.0]) # 'i' - means we have ints in array
print("2)",type(a1))
print("2)",sys.getsizeof(a1))
## 3. Напишите код для создания массива с 5 значениями, располагающимися через равные интервалы в диапазоне от 0 до 1
a=np.linspace(0,1,5)
print("3)",a,"массив с 5 значениями, располагающимися через равные интервалы в диапазоне от 0 до 1")
## 4. Напишите код для создания массива с 5 равномерно распределенными случайными значениями в диапазоне от 0 до 1
a=np.random.uniform(0,1, size=5)
print("4)",a,"массив с с 5 равномерно распределенными случайными значениями в диапазоне от 0 до 1")
## 5. Напишите код для создания массива с 5 нормально распределенными случайными значениями с мат. ожиданием = 0 и дисперсией 1
a=np.random.normal(0,1,5)
print("5)",a,"массив с 5 нормально распределенными случайными значениями с мат. ожиданием = 0 и дисперсией 1")
## 6. Напишите код для создания массива с 5 случайными целыми числами в от [0, 10)
a=np.random.randint(0, 10, size=5)
print("6)",a,"массив с 5 случайными целыми числами в от [0, 10)")
## 7. Написать код для создания срезов массива 3 на 4
a=np.arange(12).reshape(3,4)
print("7)",a,"-начальный массив")
## - первые две строки и три столбца
print("7)",a[0:2,0:3],"-первые две строки и три столбца")
## - первые три строки и второй столбец
print("7)",a[0:3,1],"- первые три строки и второй столбец")
## - все строки и столбцы в обратном порядке
print("7)",a[::-1,::-1]," все строки и столбцы в обратном порядке")
## - второй столбец
print("7)",a[:,1],"- второй столбец")
## - третья строка
print("7)",a[2,:],"- третья строка")


## 8. Продемонстрируйте, как сделать срез-копию
a=np.array([1,2,3,4,5,6])

b=a[:3].copy()
b[0]=100
print("8)",a, b)
## 9. Продемонстрируйте использование newaxis для получения вектора-столбца и вектора-строки
a=np.arange(1,13)
print("9)",a[:,np.newaxis])
print("9)",a[np. newaxis])

## 10. Разберитесь, как работает метод dstack
x=np.array([1,2,3])
y=np.array([4,5,6])
r1 = np.vstack([x,y])
r2=np.dstack([r1,r1])
print("10)",r2)

## 11. Разберитесь, как работают методы split, vsplit, hsplit, dsplit
a,b =np.split(r2,2,axis=2)# методы ниже работают на основе split, но с фиксированной осью 0,1 или 2
print("11)",a,b)
a,b,c =np.hsplit(r2,[1,2])
print('11)  разделение по оси 0 "по-горизонтали" на 3 части:',a,'и',b,'и',c,sep='\n')
a,b =np.vsplit(r2,2)
print('11)  разделение по оси 1 "по-вертикали" на 2  части:',a,'и',b,sep='\n')
a,b =np.dsplit(r2,2)
print('11)  разделение по оси 2  "вглубь" на 2  части:',a,'и',b,sep='\n')
## 12. Привести пример использования всех универсальных функций, которые я привел
#+ * - - / // ** %
x=np.arange(10)
print("12)",x+1,x*2,-x,1-x,x/2,x//2,x**2,x%2,sep='\n')

